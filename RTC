public with sharing class RelationshipTeamController {
    
    public AccountTeamMember CSO {get; private set;}
    public AccountTeamMember TSO {get; private set;}
    public AccountTeamMember TSA {get; private set;}
    public AccountTeamMember IBTeamMember {get; private set;}
    public AccountTeamMember PWA {get; private set;}

    public String currentRecordId {get; set;}
    public Account_Planning__c apExist {get; set;}
    public Boolean isFormReadOnly {get; set;}

    public RelationshipTeamController(ApexPages.StandardController controller) {
        this.currentRecordId = controller.getId();
        initializeEmptyObjects();
        
        AccountPlanning_Period__c validPeriod = validateAccountPlanningPeriod();
        isFormReadOnly = (validPeriod == null);
        
        loadTeamMembers();

        try {
            apExist = [
                SELECT Id, Name FROM Account_Planning__c
                WHERE Account__c = :currentRecordId 
                AND Account_Planning_Period__c = :validPeriod.Id
                LIMIT 1
            ];
        } catch (Exception e) {
            apExist = new Account_Planning__c();
        }
    }
    
    public PageReference handleSave() {
        AccountPlanning_Period__c validPeriod = validateAccountPlanningPeriod();
        if (validPeriod == null) {
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR, 'No active Account Planning Period found.'));
            return null;
        }

        try {
            if (apExist.Id == null) {
                apExist = new Account_Planning__c(
                    Account__c = this.currentRecordId,
                    Account_Planning_Period__c = validPeriod.Id,
                    Name = validPeriod.Name
                );
            }

            if (CSO != null) apExist.CSO__c = CSO.User.Name;
            if (TSO != null) apExist.TSO__c = TSO.User.Name;
            if (TSA != null) apExist.TSA__c = TSA.User.Name;
            if (IBTeamMember != null) apExist.IBTeamMemberUserName__c = IBTeamMember.User.Name;
            if (PWA != null) apExist.PWATeamMemberUserName__c = PWA.User.Name;

            upsert apExist;
            
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.CONFIRM, 'Relationship Team saved successfully.'));

        } catch (Exception e) {
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR, 'Error saving: ' + e.getMessage()));
        }
        return null;
    }

    private AccountPlanning_Period__c validateAccountPlanningPeriod() {
        List<AccountPlanning_Period__c> periods = [
            SELECT Id, Name FROM AccountPlanning_Period__c
            WHERE StartDate__c <= TODAY AND EndDate__c >= TODAY
            LIMIT 1
        ];
        return periods.isEmpty() ? null : periods[0];
    }

    private void loadTeamMembers() {
        if (this.currentRecordId == null) return;

        AccountTeamMember IB;
        AccountTeamMember IB_M_A;
        AccountTeamMember IB_Syndications;
        AccountTeamMember IB_Sponsor_Coverage;
        AccountTeamMember IB_ABL_Credit;

        Map<Id, AccountTeamMember> teamMembers = new Map<Id, AccountTeamMember>(
            [SELECT Id, AccountID, User.Name, User.IsActive, TeamMemberRole 
             FROM AccountTeamMember 
             WHERE AccountID = :this.currentRecordId 
             ORDER BY User.Name ASC]
        );

        for (AccountTeamMember atm : teamMembers.values()) {
            if (atm.TeamMemberRole == 'Assigned CSO') {
                CSO = atm;
            } else if (atm.TeamMemberRole == 'Treasury') {
                TSO = atm;
            } else if (atm.TeamMemberRole == 'TS - TSA (Treasury Solutions Associate)') {
                TSA = atm;
            } else if (atm.TeamMemberRole == 'PCA') {
                PWA = atm;
            } else if (atm.TeamMemberRole == 'IB') {
                IB = atm;
            } else if (atm.TeamMemberRole == 'IB - M&A') {
                IB_M_A = atm;
            } else if (atm.TeamMemberRole == 'IB - Syndications') {
                IB_Syndications = atm;
            } else if (atm.TeamMemberRole == 'IB - Sponsorship') {
                IB_Sponsor_Coverage = atm;
            } else if (atm.TeamMemberRole == 'IB - ABL Credit') {
                IB_ABL_Credit = atm;
            }
        }
        
        if (IB != null) IBTeamMember = IB;
        else if (IB_M_A != null) IBTeamMember = IB_M_A;
        else if (IB_Syndications != null) IBTeamMember = IB_Syndications;
        else if (IB_Sponsor_Coverage != null) IBTeamMember = IB_Sponsor_Coverage;
        else if (IB_ABL_Credit != null) IBTeamMember = IB_ABL_Credit;
    }
    
    private void initializeEmptyObjects() {
        CSO = new AccountTeamMember(User = new User());
        TSO = new AccountTeamMember(User = new User());
        TSA = new AccountTeamMember(User = new User());
        IBTeamMember = new AccountTeamMember(User = new User());
        PWA = new AccountTeamMember(User = new User());
    }
}
